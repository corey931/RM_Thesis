# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2019-04-11 17:56
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import otree.currency
import otree.db.models
import otree_save_the_change.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('all_players', otree.db.models.IntegerField(null=True)),
                ('partner1', otree.db.models.IntegerField(blank=True, default=1, null=True)),
                ('partner2', otree.db.models.IntegerField(blank=True, default=2, null=True)),
                ('partner3', otree.db.models.IntegerField(blank=True, default=3, null=True)),
                ('yellow_counter1', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('yellow_counter2', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('yellow_counter3', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('blue_counter1', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('blue_counter2', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('blue_counter3', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('select1', otree.db.models.BooleanField(choices=[[True, 'selected'], [False, 'not selected']], verbose_name='The first one')),
                ('select2', otree.db.models.BooleanField(choices=[[True, 'selected'], [False, 'not selected']], verbose_name='The second one')),
                ('select3', otree.db.models.BooleanField(choices=[[True, 'selected'], [False, 'not selected']], verbose_name='The third one')),
                ('dictator_choice11', otree.db.models.CurrencyField(choices=[(otree.currency.Currency('250'), otree.currency.Currency('250')), (otree.currency.Currency('300'), otree.currency.Currency('300')), (otree.currency.Currency('350'), otree.currency.Currency('350')), (otree.currency.Currency('400'), otree.currency.Currency('400')), (otree.currency.Currency('450'), otree.currency.Currency('450')), (otree.currency.Currency('500'), otree.currency.Currency('500'))], default=0, null=True, verbose_name='')),
                ('dictator_choice21', otree.db.models.CurrencyField(choices=[(otree.currency.Currency('250'), otree.currency.Currency('250')), (otree.currency.Currency('300'), otree.currency.Currency('300')), (otree.currency.Currency('350'), otree.currency.Currency('350')), (otree.currency.Currency('400'), otree.currency.Currency('400')), (otree.currency.Currency('450'), otree.currency.Currency('450')), (otree.currency.Currency('500'), otree.currency.Currency('500'))], default=0, null=True, verbose_name='')),
                ('dictator_choice31', otree.db.models.CurrencyField(choices=[(otree.currency.Currency('250'), otree.currency.Currency('250')), (otree.currency.Currency('300'), otree.currency.Currency('300')), (otree.currency.Currency('350'), otree.currency.Currency('350')), (otree.currency.Currency('400'), otree.currency.Currency('400')), (otree.currency.Currency('450'), otree.currency.Currency('450')), (otree.currency.Currency('500'), otree.currency.Currency('500'))], default=0, null=True, verbose_name='')),
                ('dictator_choice12', otree.db.models.CurrencyField(choices=[(otree.currency.Currency('250'), otree.currency.Currency('250')), (otree.currency.Currency('200'), otree.currency.Currency('200')), (otree.currency.Currency('150'), otree.currency.Currency('150')), (otree.currency.Currency('100'), otree.currency.Currency('100')), (otree.currency.Currency('50'), otree.currency.Currency('50')), (otree.currency.Currency('0'), otree.currency.Currency('0'))], default=0, null=True, verbose_name='')),
                ('dictator_choice22', otree.db.models.CurrencyField(choices=[(otree.currency.Currency('250'), otree.currency.Currency('250')), (otree.currency.Currency('200'), otree.currency.Currency('200')), (otree.currency.Currency('150'), otree.currency.Currency('150')), (otree.currency.Currency('100'), otree.currency.Currency('100')), (otree.currency.Currency('50'), otree.currency.Currency('50')), (otree.currency.Currency('0'), otree.currency.Currency('0'))], default=0, null=True, verbose_name='')),
                ('dictator_choice32', otree.db.models.CurrencyField(choices=[(otree.currency.Currency('250'), otree.currency.Currency('250')), (otree.currency.Currency('200'), otree.currency.Currency('200')), (otree.currency.Currency('150'), otree.currency.Currency('150')), (otree.currency.Currency('100'), otree.currency.Currency('100')), (otree.currency.Currency('50'), otree.currency.Currency('50')), (otree.currency.Currency('0'), otree.currency.Currency('0'))], default=0, null=True, verbose_name='')),
                ('die_roll1', otree.db.models.IntegerField(null=True, verbose_name='You just rolled the dice. What is the result of the roll?')),
                ('die_roll2', otree.db.models.IntegerField(null=True, verbose_name='You just rolled the dice. What is the result of the roll?')),
                ('die_roll3', otree.db.models.IntegerField(null=True, verbose_name='You just rolled the dice. What is the result of the roll?')),
                ('dieroll_end1', otree.db.models.IntegerField(null=True, verbose_name='You just rolled the dice. What is the result of the roll?')),
                ('dieroll_end2', otree.db.models.IntegerField(null=True, verbose_name='You just rolled the dice. What is the result of the roll?')),
                ('dieroll_end3', otree.db.models.IntegerField(null=True, verbose_name='You just rolled the dice. What is the result of the roll?')),
                ('dieroll_end4', otree.db.models.IntegerField(null=True, verbose_name='You just rolled the dice. What is the result of the roll?')),
                ('payoff_rf1', otree.db.models.CurrencyField(default=0, null=True)),
                ('payoff_rf2', otree.db.models.CurrencyField(default=0, null=True)),
                ('payoff_rf3', otree.db.models.CurrencyField(default=0, null=True)),
                ('payoff_dictator4', otree.db.models.CurrencyField(default=0, null=True)),
                ('payoff_dieroll4', otree.db.models.CurrencyField(default=0, null=True)),
                ('payoff1', otree.db.models.CurrencyField(null=True)),
                ('payoff2', otree.db.models.CurrencyField(null=True)),
                ('payoff3', otree.db.models.CurrencyField(null=True)),
                ('payoff4', otree.db.models.CurrencyField(null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thesis_group', to='otree.Session')),
            ],
            options={
                'db_table': 'thesis_group',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_gbat_arrived', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('_gbat_grouped', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('yellow_choice1', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('yellow_choice2', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('yellow_choice3', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('blue_choice1', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('blue_choice2', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('blue_choice3', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('balls', otree.db.models.IntegerField(blank=True, default=1, null=True)),
                ('continue_env1', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('continue_env2', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('understood3', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I herewith confirm that I have read and understood the information of "Part 2".')),
                ('understood31', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I herewith confirm that I have read and understood the information of stage 1.')),
                ('understood32', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I herewith confirm that I have read and understood the information of stage 2.')),
                ('understood33', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I herewith confirm that I have read and understood the information of stage 3.')),
                ('understood34', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], verbose_name='I herewith confirm that I have read and understood the information of the "End of a Round in Part 1" section.')),
                ('comprehension7', otree.db.models.IntegerField(choices=[[1, '0 points each'], [2, '150 points each'], [3, '250 points each']], null=True, verbose_name='')),
                ('comprehension8', otree.db.models.IntegerField(choices=[[1, '0 points each'], [2, '150 points each'], [3, '250 points each']], null=True, verbose_name='')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='thesis.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thesis_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thesis_player', to='otree.Session')),
            ],
            options={
                'db_table': 'thesis_player',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thesis_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'thesis_subsession',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.AddField(
            model_name='player',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thesis.Subsession'),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thesis.Subsession'),
        ),
    ]
